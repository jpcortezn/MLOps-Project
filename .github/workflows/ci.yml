name: CI/CD - Emotion API Deploy

on:
  push:
    branches: [ main ]

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt

    - name: Build Docker image
      run: |
        docker build -t emotion-api . -f rest-api/Dockerfile

    - name: Prepare SSH key
      run: |
        echo "${{ secrets.EC2_SSH_KEY }}" > ec2_key.pem
        chmod 600 ec2_key.pem

    - name: Copy files to EC2
      run: |
        rsync -avz -e "ssh -i ec2_key.pem -o StrictHostKeyChecking=no" ./ ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }}:/home/${{ secrets.EC2_USER }}/emotion-api

    - name: Deploy on EC2 via SSH
      run: |
        ssh -i ec2_key.pem -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_HOST }} << 'EOF'
          echo "Limpiando contenedores y puertos antiguos..."
          cd emotion-api

          # Forzar liberaciÃ³n de puertos comunes
          sudo lsof -t -i:8000 -i:9090 -i:3000 | xargs --no-run-if-empty sudo kill -9 || true

          # Detener y eliminar contenedores/redes anteriores
          docker-compose down || true
          docker container prune -f || true
          docker network prune -f || true

          echo "Desplegando contenedores..."
          docker-compose up -d --build
        EOF
